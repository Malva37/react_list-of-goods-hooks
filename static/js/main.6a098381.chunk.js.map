{"version":3,"sources":["types/SortType.ts","components/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortType","GoodsList","visibleGoods","map","good","goodsFromServer","App","useState","isReversed","setReverse","sortType","setSortType","goods","sort","f1","f2","ALPHABET","localeCompare","LENGTH","length","NONE","reverse","getReorderedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,6EAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,gBCMCC,EAA6B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC3C,OACE,mCACE,6BACGA,EAAaC,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,WCLJC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BK,IAAMC,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAOMT,EAlCD,SACLU,EADK,GAGJ,IADCF,EACF,EADEA,SAAUF,EACZ,EADYA,WAENN,EAAY,YAAOU,GAkBzB,OAhBAV,EAAaW,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKV,EAASgB,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKf,EAASkB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,KAAKnB,EAASoB,KACd,QACE,OAAO,MAITZ,GACFN,EAAamB,UAGRnB,EAYcoB,CACnBjB,EACA,CAAEK,WAAUF,eAGd,OACE,mCACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYf,IAAaV,EAASgB,WAEtCU,QAAS,kBAAMf,EAAYX,EAASgB,WANtC,iCAWA,wBACEQ,KAAK,SACLE,QAAS,kBAAMf,EAAYX,EAASkB,SACpCK,UAAWE,IACT,oBACA,CAAE,WAAYf,IAAaV,EAASkB,SALxC,4BAWA,wBACEM,KAAK,SACLE,QAAS,kBAAMjB,GAAYD,IAC3Be,UAAWE,IACT,oBACA,CAAE,YAAajB,IALnB,sBAWGE,IAAaV,EAASoB,MAAQZ,IAC7B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAlDrBjB,GAAW,QACXE,EAAY,IA8CF,sBAWN,cAAC,EAAD,CAAWT,aAAcA,UC1GjCyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6a098381.chunk.js","sourcesContent":["export enum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n","import React from 'react';\n\ntype Props = {\n  visibleGoods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ visibleGoods }) => {\n  return (\n    <>\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { SortType } from './types/SortType';\nimport { ReorderOptions } from './types/ReorderOptions';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((f1, f2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return f1.localeCompare(f2);\n      case SortType.LENGTH:\n        return f1.length - f2.length;\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(0);\n\n  const reverseHandler = () => {\n    setReverse(false);\n    setSortType(0);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <>\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => setSortType(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => setSortType(SortType.LENGTH)}\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => setReverse(!isReversed)}\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n          >\n            Reverse\n          </button>\n          {\n            (sortType !== SortType.NONE || isReversed) && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => reverseHandler()}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <GoodsList visibleGoods={visibleGoods} />\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}